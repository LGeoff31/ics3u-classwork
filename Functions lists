List 1 questions

#1 First last 6

from typing import List
def first_last6(nums:List[int]) -> List:
    if nums[0] == 6 and nums[-1] == 6:
        return True
    else:
        return False
result = first_last6([6,4,3,5])
print(result)

#2 first last same?

from typing import List

def first_last_equal(nums:List[int]) -> List:
    if nums[0] == nums[-1]:
        return True
    else:
        return False
print(first_last_equal([2,74,7,8,5,4,6,4,2]))


#3 Make_pi

from typing import List
def make_pi(nums:List[int]) -> int:
    return nums

result = make_pi([3,1,4])
print(result)


#4 Common end

from typing import List
def common_end(a:List[int], b:List[int])-> int:
    if a[0] == b[0] or a[-1] == b[-1]:
        return True
    else:
        return False
print(common_end([2,5,3,5,7,4,5,8], [3,2,8]))



#5 Sum_3

from typing import List 

def sum_3(nums: List[int]) -> int:
    return sum(nums)

result = sum_3([1, 2, 3])
print(result)



#6 Rotate left_3

from typing import List


def rotate_left_3(nums: List[int]) -> List[int]:
    return [nums[1], nums[2], nums[0]]


result = rotate_left_3([1, 2, 3])
print(result)



#7 Reverse_3

from typing import List


def reverse_3(nums: List[int]) -> List[int]:
    return [nums[2], nums[1], nums[0]]


result = reverse_3([1, 2, 3])
print(result)

#8 Max_end_3

from typing import List
def max_end_3(nums:List[int]) -> List:
    if nums[0] >= nums[1] and nums[0] >= nums[2]:
        return [nums[0], nums[0], nums[0]]
    elif nums[1] >= nums[0] and nums[1] >= nums[2]:
        return [nums[1], nums[1], nums[1]]
    else:
        return [nums[2], nums[2], nums[2]]


print(max_end_3([1,2,3]))


#9 Sum_2

from typing import List

def sum_2(nums: List[int]) -> int:
    if len(nums) == 0:
        return False
    else:
        return nums[0] + nums[1]


result = sum_2([1, 4, 3])
print(result)






#10 Middle_way

from typing import List


def middle_way(a: List[int], b: List[int]) -> List[int]:
    return [a[1], b[1]]


result = middle_way([1, 2, 3], [4, 5, 6])
print(result)


List 2 questions

#1 Count_evens

from typing import List
def count_evens(nums:List[int]) -> List:
    even_count = 0
    for i in range(len(nums)):
        if nums[i] % 2 == 0:
            even_count += 1
    return even_count
result = count_evens([1,4,7,4,6,2])
print(result)

#2 Big_diff

from typing import List


def big_diff(nums: List[int]) -> int:
    return max(nums) - min(nums)


result = big_diff([10, 3, 5, 6])
print(result)

#3 Centered_average 

from typing import List


def centered_average(nums: List[int]) -> int:
    total = 0
    average = 0
    amount_numbers = len(nums)-2
    total = (sum(nums) - max(nums) - min(nums))
    average = total / amount_numbers
    return average



result = centered_average([1, 2, 3, 4, 100])
print(result)

#4 Sum 13  

from typing import List

def sum_13(nums: List[int]) -> int:
    result = 0
    i = 0
    while i < len(nums):
        if nums[i] == 13:
            i += 2
        else:
            result += nums[i]
            i+=1

    return result
    



print(sum_13([1, 2, 13, 2, 1, 13]))



#5 Has_22

from typing import List


def has_22(nums: List[int]) -> bool:
    index = nums.find(2)
    if nums[index + 1] == 2:
        return True
    else:
        return False


result = has_22([1, 2, 2])
print(result)

#6 Lucky 13

from typing import List


def lucky_13(nums: List[int]) -> bool:
    lucky = True
    for num in nums:
        if num == 1 or num == 3:
            lucky = False

    return lucky
      
    


result = lucky_13([0, 2, 3])
print(result)

#7 Sum 28

from typing import List

amount = 0
def sum_28(nums: List[int]) -> bool:
    amount = nums.count(2)
    if amount == 4:
        return True
    else:
        return False


result = sum_28([2, 3, 2, 2, 4, 2])
print(result)

#8 More 14

from typing import List


def more_14(nums: List[int]) -> bool:
    amount_1 = nums.count(1)
    amount_4 = nums.count(4)
    if amount_1 > amount_4:
        return True
    else:
        return False


result = more_14([1, 4, 1])
print(result)


#9 Only 14

from typing import List


def only_14(nums: List[int]) -> bool:
    valid = False
    for i in range(len(nums)):
        if nums[i] == 1 or nums[i] == 4:
            valid = True
        else:
            valid = False
            break
    return valid


result = only_14([1, 4, 2, 4])
print(result)


#10 No 14

from typing import List

def no_14(nums: List[int]) -> bool:
    valid = False
    number_1 = 0
    number_4 = 0
    for i in range(len(nums)):
        if nums[i] == 1: 
            number_1 = 1
        if nums[i] == 4:
            number_4 = 4
    if number_1 == 1 and number_4 == 4:
        valid = False
    else:
        valid = True
    
    
    return valid


result = no_14([2, 3, 4])
print(result)
